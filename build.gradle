buildscript {
	repositories {
		maven {
			url "http://repo.jfrog.org/artifactory/gradle"
		}
		jcenter()
		mavenLocal()
		dependencies {
			classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
		}
	}
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory-upload'
apply plugin: 'pmd'
apply plugin: 'findbugs'

group = 'com.thedeanda'
version = '2.2-SNAPSHOT'
description = "a lorem ipsum generator"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
	mavenLocal()
}
configurations {
	published
}
task sourceJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
artifactoryPublish {
	dependsOn sourceJar, javadocJar
}
artifactory {


}
jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}
pmd {
	ignoreFailures = true
	reportsDir = file('build/docs/pmd')
}
findbugs {
	ignoreFailures = true
	reportsDir = file('build/docs/findbugs')
	toolVersion = '3.0.1'
}
findbugsMain {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}
task copyCoverageReport(type: Copy) {
	from 'build/jacocoHtml'
	into 'build/docs/jacoco'
}
copyCoverageReport.dependsOn jacocoTestReport

task copyTest(type: Copy) {
	from 'build/reports/tests'
	into 'build/docs/tests'
}
copyTest.dependsOn test

task docJar(type: Jar) {
	classifier = 'doc'
	from 'build/docs'
}
docJar.dependsOn javadoc, copyTest, copyCoverageReport, check
artifactoryPublish {
	dependsOn docJar
}
artifacts {
	//published sourceJar
	//published javadocJar
	published docJar
}

dependencies {
	testCompile 'junit:junit:4.+'
}
